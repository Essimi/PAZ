package kr.or.ddit.common.authentication.controller;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;


import kr.or.ddit.member.service.MemberService;
import lombok.extern.slf4j.Slf4j;

@Slf4j
public class ProjectStatusChange {
	
	@Inject
	private MemberService service;
	
	public void projectStatusChangeMet(){
		
		log.info("========================================================================================================");
		log.info("========================================================================================================");
		log.info("========================================================================================================");
		log.info("==========================================MEMBER STATUS CHANGE==========================================");
		log.info("========================================================================================================");
		log.info("========================================================================================================");
		log.info("========================================================================================================");
		
		String memId = null;
	
		// 오늘 날짜와 데드라인이 같은 회원만 출력합니다.
		List<Map<Object, String>> member = service.memberDeadLineInfo();
						
		// 데이터 입력을 위해 리스트 객체를 생성해줍니다.
		List<String> changeList = new ArrayList<String>();
		
		if(member.size() > 0) {
			// 반복문을 돌며 회원 아이디만 출력합니다.
			for(Map<Object, String> data : member) {
				memId = data.get("MEM_ID");
				changeList.add(memId);
			}
			
			// 회원 상태를 변경해줍니다.	
		 	service.memberDeadLineChangePayment(changeList);		
		}else {
			
			// 데이터가 하나도 없을 경우 입니다.
			log.info("NO DATA....");
			
		}
		
		log.info("========================================================================================================");
		log.info("========================================================================================================");
		log.info("========================================================================================================");
		log.info("=============================================Scheduling END=============================================");
		log.info("========================================================================================================");
		log.info("========================================================================================================");
		log.info("========================================================================================================");
		
	}
}
