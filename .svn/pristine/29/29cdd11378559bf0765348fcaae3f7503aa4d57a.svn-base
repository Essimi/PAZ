<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.admin.dashboard.dao.DashboardDAO">
	<!-- 월별 환불 / 결제 대시보드  -->
	<select id="selectPayDashInfo" resultType="AdminDashboardVO" parameterType="DataListVO">
		select c.month_Date, ABS(c.AMOUNT-NVL(d.AMOUNT,0)) amount_Sum
		from
		(
		SELECT SUBSTR(PAY_DATE,1,5)month_Date, SUM(PAY_AMOUNT) AMOUNT 
		FROM PAY_INFO
		GROUP BY SUBSTR(PAY_DATE,1,5)
		ORDER BY SUBSTR(PAY_DATE,1,5)
		)c,
		(
		SELECT SUBSTR(PAY_DATE,1,5)month_Date, SUM(PAY_AMOUNT) AMOUNT
		  FROM PAY_INFO A, REFUND_INFO B
		  WHERE A.PAY_CODE = B.PAY_CODE
		GROUP BY SUBSTR(PAY_DATE,1,5)
		ORDER BY SUBSTR(PAY_DATE,1,5)
		)d
		where c.month_Date=d.month_Date(+)
		ORDER BY month_Date
	</select>
	
	
	<!-- 회원 나이 비율 대시보드 -->
	<select id="selectMemAgeDash" resultType="AdminDashboardVO" parameterType="DataListVO">
		select RPAD(SUBSTR(TRUNC(MONTHS_BETWEEN(SYSDATE,TO_DATE(to_char(MEM_BIRTH,'YYYY'),'YYYY'))/12),1,1),2,0) mem_age
		        , count(SUBSTR(MEM_BIRTH,1,3)) age_count
		  from member
		GROUP BY RPAD(SUBSTR(TRUNC(MONTHS_BETWEEN(SYSDATE,TO_DATE(to_char(MEM_BIRTH,'YYYY'),'YYYY'))/12),1,1),2,0)
		ORDER BY mem_age
	</select>
	
	
	<!-- 회원 소속파트별 대시보드 -->
	<select id="selectClassification" resultType="AdminDashboardVO" parameterType="DataListVO">
		SELECT MEM_COMPANY MEM_COMPANYLIST, COUNT(MEM_COMPANY) MEM_COMPANYCOUNT
		  FROM member
	  GROUP BY MEM_COMPANY
	</select>
	
	
	<!-- 회원 성별 비율 대시보드 -->
	<select id="selectGenderDashboard" resultType="AdminDashboardVO" parameterType="DataListVO">
		SELECT
		    mem_gender, count(mem_gender) count_gender
		FROM
		    member
		group by mem_gender
	</select>
	
	
	<!-- 프로젝트 파트 대시보드 -->
	<select id="selectPorjectPartDashboard" resultType="AdminDashboardVO" parameterType="DataListVO">
		SELECT

		     p_part_code, count(p_part_code) part_count, part_name
		FROM
		    project a, PROJECT_PART b 
		where p_part_code = PART_CODE
		group by p_part_code, part_name
	</select>
	
	
	<!-- 프로젝트 기능별 평점 수치 대시보드(컬럼별로 쪼개진것을 리스트로 만들어서 사용) -->
	<select id="selectProjectFunctionAvgDashboard" resultType="AdminDashboardVO" parameterType="DataListVO">
	 WITH A AS (         
	 			SELECT
	                AVG(code_grade) AS code_grade_AVG,
	                AVG(work_grade) AS work_grade_AVG,
	                AVG(ganttchart_grade) AS ganttchart_grade_AVG,
	                AVG(kanban_grade) AS kanban_grade_AVG,
	                AVG(chat_grade) AS chat_grade_AVG
	            FROM
	                review
	)    
	SELECT CODE_GRADE_AVG AS GRADE_AVG FROM A
	UNION ALL
	SELECT WORK_GRADE_AVG FROM A
	UNION ALL
	SELECT ganttchart_grade_AVG FROM A
	UNION ALL
	SELECT kanban_grade_AVG FROM A
	UNION ALL
	SELECT chat_grade_AVG FROM A
	</select>
	
	
	<!-- 프로젝트 기능별 평점 작성글 대시보드 -->
	<select id="selectProjectFunctionTextDashboard" resultType="AdminDashboardVO" parameterType="PagingVO">
	SELECT B.*
	  FROM (
				SELECT A.*, ROWNUM RNUM
				FROM (
                           SELECT
                               feedback
                           FROM
                               review
                           ORDER BY REVIEW_CODE 
				) A  
			) B 
	<![CDATA[
		WHERE  RNUM >= #{startRow} AND RNUM <= #{endRow}
	]]>
	</select>
	
	
	<!-- 프로젝트 페이지 레코드 수 -->
	<select id="selectTotalRecord" resultType="int">
		SELECT COUNT(*)
		FROM review
	</select>
	
	<!-- 로그인 시간과 카운트 -->
	<select id="selectlogInDashboard" resultType="AdminDashboardVO" >
		SELECT
		    to_char(login_date,'HH24') login_time
		    ,count(to_char(login_date,'HH24'))-1 login_count
		FROM
		    login_info
		where login_date is not null
		group by to_char(login_date,'HH24')
		order by login_time
	</select>
	<!-- 로그아웃시간과 카운트 -->
	<select id="selectlogOutDashboard" resultType="AdminDashboardVO" >
	SELECT 
	    to_char( logout_date,'HH24') logout_time
	    ,count(to_char( logout_date,'HH24'))-1 logout_count
	FROM
	    login_info
	where logout_date is not null
	group by to_char( logout_date,'HH24')
	order by logout_time
	</select>
	
</mapper>