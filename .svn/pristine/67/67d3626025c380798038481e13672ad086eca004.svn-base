package kr.or.ddit.news.controller;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;

import javax.inject.Inject;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.Errors;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.fasterxml.jackson.databind.ObjectMapper;

import kr.or.ddit.enumpkg.ServiceResult;
import kr.or.ddit.news.service.NewsReplyService;
import kr.or.ddit.vo.NewsReplyVO;

@Controller
public class NewsReplyController {
	
	@Inject
	private NewsReplyService service;
	
	@RequestMapping(value = "/reply/replyList.do", method=RequestMethod.POST)
	private String newsReplyList(
			@ModelAttribute("newsReplyVO") NewsReplyVO reply,
			@RequestHeader("accept") String accept,
			HttpServletResponse resp,
			Model model
			) throws IOException {
		
		List<NewsReplyVO> dataList = service.newsReplyList(reply);
		reply.setDataList(dataList);
		
		if(accept.contains("json")) {
			resp.setContentType("application/json;charset=UTF-8");
			try(
					PrintWriter out = resp.getWriter();
					){
				ObjectMapper mapper = new ObjectMapper();
				mapper.writeValue(out, reply);
				
				return null;
			}
		}
		
		model.addAttribute("dataList", dataList);
		
		return "news/newsList"; 
		
		
	}
	
	
	@RequestMapping(value = "news/newsReplyInsert.do", method=RequestMethod.POST)
	public String replyInsert(
			@ModelAttribute("reply") NewsReplyVO reply,
			Errors errors,
			Model model,
			@RequestParam("commentCode") String commentCode
			){
		
		reply.setCommentCode(commentCode);
		
		String viewName = null;
		String message = null;
		
		if(!errors.hasErrors()) {
			ServiceResult result = service.createReply(reply);
			switch(result) {
			case OK:
				viewName = "news/newsList";
				message = "댓글 작성 성공";
				break;
			default:
				viewName = "news/newsList";
				message = "서버 오류, 잠시 뒤 다시 해보세요";
			}		
			}else {
				viewName = "news/newsList";
			}
			
			model.addAttribute("message", message);
			return viewName;
	}

	
}