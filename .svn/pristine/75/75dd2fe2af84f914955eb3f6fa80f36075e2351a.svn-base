package kr.or.ddit.project.controller;

import java.util.List;

import javax.inject.Inject;
import javax.servlet.http.HttpSession;

import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import kr.or.ddit.project.service.ProjectService;
import kr.or.ddit.project.service.RequestProjectService;
import kr.or.ddit.vo.MemberVO;
import kr.or.ddit.vo.ProjectVO;
import kr.or.ddit.vo.RequestProjectVO;
import lombok.extern.slf4j.Slf4j;

@Controller
@Slf4j
public class MyProjectController {

	@Inject
	private ProjectService service;
	@Inject
	private RequestProjectService requestService;
	
	

	@RequestMapping(value = "project/myprojectList.do", method=RequestMethod.GET)
	public String myProjectList(
			Model model,
			@AuthenticationPrincipal(expression = "authMember") MemberVO member
			){ // 로그인 한 값 세션에 넣고, 나중에 받아올거임.
		
		
		// 내 프로젝트 리스트 
	    ProjectVO projectVO = new ProjectVO();
	    projectVO.setMemId(member.getMemId());
	    
	    List<ProjectVO> dataList = service.selectMyProjectList(projectVO);
	    model.addAttribute("dataList", dataList);
	    
	    
		// 프로젝트 요청 리스트
		List<RequestProjectVO> requestList = requestService.selectRequestList(member);
		
		if(!requestList.isEmpty())
			// 요청 리스트 model 에 넣기 
			model.addAttribute("requestList", requestList);
		
		log.info("iuhiuh{}", requestList);
		
		
		// PL 프로젝트 리스트 
		List<ProjectVO> plList = service.listMyProjectPl(member);
		
		
		if(!plList.isEmpty())
			model.addAttribute("plList", plList);

		for(int i = 0; i < plList.size(); i++) {
			log.info("plList : {}", plList.get(i).getpCode());
		}
	
		
		model.addAttribute("reviewStatus", member.getReviewStatus());
		
		return "myProject/myProject";
	}



		// 리스트 클릭 시 해당 페이지로 이동 
		@RequestMapping(value="project/{pCode}/projectView.do")
		public String selectMyproject(
				@PathVariable("pCode") String pCode,
				@AuthenticationPrincipal(expression="authMember") MemberVO member,
				Model model,
				HttpSession session
				) {
			
			log.info("Controller까지 옴");
			log.info(pCode);
			
			
			// projectSelect pCode 넘겨줄 VO
			ProjectVO project = new ProjectVO();
			project.setpCode(pCode);
			project.setMemId(member.getMemId());
			
			// 해당 프로젝트에서 회원의 position
			String position = service.selectPosition(project).getPosition();
			
			// 해당 프로젝트의 모든 정보 받아옴 - memId 와 position 도 넣어줌
			ProjectVO projectAll = service.selectProject(project);
			projectAll.setpCode(pCode);
			projectAll.setMemId(member.getMemId());
			projectAll.setPosition(position);
			
			log.info("여기 프로젝트올: {}", projectAll.toString());
			

			log.info("position: {} ", position);
			// 근데 이미 jsp에서 position 으로 받은게 많아서 걍 놔둘게요  
			session.setAttribute("position", position);
			session.setAttribute("project", projectAll);
			
			return "project/projectView";
			
		}
	}



