package kr.or.ddit.chat.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;

import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.chat.service.ChattingService;
import kr.or.ddit.enumpkg.ServiceResult;
import kr.or.ddit.vo.ChatRoomVO;
import kr.or.ddit.vo.MemberVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
public class OneChatRoomMakeController {
	
	@Inject
	private ChattingService service;
	
	@RequestMapping(value="chat/oneMakeChat.do")
	@ResponseBody
	public Map<String, Object> oneChatMake(
			@RequestParam(value="yourId", required=true) String yourId
			,@RequestParam(value="yourNickname", required=true) String yourNickname
			,@AuthenticationPrincipal(expression="authMember") MemberVO authMember
			,Model model
			
			) {
		
		// chatVO에 정보를 담아 서비스 단으로 전달한다.
		
		ChatRoomVO chat = new ChatRoomVO();
		
		String myId =authMember.getMemId();
		String myNickname = authMember.getMemNickname();
		
		// 멤버리스트에 나의 아이디와 상대방의 아이디를 저장한다.
		List<String> memberList = new ArrayList<String>();
		
		memberList.add(myId);
		
		if (!myId.equals(yourId)) {
			memberList.add(yourId);
		}
		
		String chatroomCode = service.selectChatroomCode();
		
		// 대화방의 코드를 저장
		chat.setChatroomCode(chatroomCode);
		
		log.info("챗룸코드를 잘 만들어오는지 {}", chatroomCode);
		
		// 대화방의 개설자 저장
		chat.setChatroomCreator(authMember.getMemId());
		
		// 대화방의 채팅방 이름은 나의 닉네임과 상대방의 닉네임으로 만들어 진다.
		
		if (!myId.equals(yourId)) {
			chat.setChatroomTitle(myNickname + "님과" + yourNickname + "님의 대화");
		} else {
			chat.setChatroomTitle(myNickname + "♥");
		}
		
		chat.setpCode("PROJECT00008");
		
		ServiceResult result = service.insertChatRoom(chat, memberList);
		
		log.info("결과값 확인 {}",result);
		
		Map<String, Object> map = new HashMap<>();
		
		map.put("result", result);
		
		return map;
	}

}
