package kr.or.ddit.member.controller;

import javax.inject.Inject;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.http.MediaType;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.admin.member.service.AdminMemberService;
import kr.or.ddit.enumpkg.ServiceResult;
import kr.or.ddit.member.dao.MemberDAO;
import kr.or.ddit.member.service.MemberService;
import kr.or.ddit.vo.MemberVO;

@Controller
public class MyPageController {
	
	@Inject
	MemberService memberService;
	
	@Inject
	AdminMemberService adminService;
	
	@RequestMapping("mypage/myPage.do")
	public String Access(
			@AuthenticationPrincipal(expression="authMember") MemberVO authMember,
			Model model
			){
		MemberVO memberInfo = memberService.selectMember(authMember);
		model.addAttribute("memberInfo", memberInfo);
		
		return "member/myPage";
	}
	
	@RequestMapping("mypage/memberDelete.do")
	public String delete(
			@AuthenticationPrincipal(expression="authMember") MemberVO authMember,
			HttpSession session,
			HttpServletResponse resp
			) {
		String viewName = null;
		ServiceResult result = adminService.updateMemberOutCode(authMember);
		switch (result) {
		case OK:
			Cookie kc = new Cookie("remember-me", null);

			kc.setMaxAge(0); // 유효시간을 0으로 설정

			resp.addCookie(kc); 
			
			session.invalidate();
			viewName = "redirect:/";
			break;
		default:
			viewName = "mypage/myPage.do";
			break;
		}
		
		return viewName;
	}
	
	@RequestMapping(value="mypage/leftMemberInfo.do", method=RequestMethod.POST, produces=MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseBody
	public MemberVO leftMemberInfo(
			@ModelAttribute("leftMenuMember") MemberVO member,
			@RequestParam("memId") String memId
			) {
		MemberVO memberInfo = memberService.selectMember(member);
		
		return memberInfo;
	}
	
}
