package kr.or.ddit.setting.controller;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.SessionAttribute;

import kr.or.ddit.enumpkg.ServiceResult;
import kr.or.ddit.project.service.RequestProjectService;
import kr.or.ddit.vo.MemberVO;
import kr.or.ddit.vo.ProjectVO;
import kr.or.ddit.vo.RequestProjectVO;

@Controller
public class MemberInviteController {
	
	@Inject
	RequestProjectService service;
	
	@RequestMapping("setting/memberInvite.do")
	@ResponseBody
	public String memberInvited(@RequestParam("recipient") String recipient,
								@RequestParam("position") String position,
								@SessionAttribute("project") ProjectVO project,
								@SessionAttribute("memberList") List<ProjectVO> memberList) {
		
		String realResult = null;
		
		//String result = null;
		
		// 존재하는 회원인지 확인 
//		MemberVO member = new MemberVO();
//		member.setMemId(recipient);
		
		// 결과값 담기 - nickname
		//member = service.selectMemberInfo(member);
		
		ServiceResult result = service.selectMemberInfo(recipient);
		
		// 아이디가 존재하면.
		if(result.equals(ServiceResult.OK)) {
			
			int cnt = 0; 
			
			// 회원이 프로젝트 내에 존재하는지 
			for(ProjectVO projectMem : memberList) {
				
				if(projectMem.getMemId().equals(recipient)) {
					cnt ++;
				}
				
			}
			
			// 회원이 프로젝트에 이미 존재한다면.
			if(cnt > 0) {
				realResult = "failed";
				
			// 회원이 프로젝트 내에 존재하지 않으면 
			}else {
				
				RequestProjectVO requestProject = new RequestProjectVO();
				
				requestProject.setSender(project.getMemId());
				requestProject.setpCode(project.getpCode());
				requestProject.setRecipient(recipient);
				requestProject.setPosition(position);
				
				ServiceResult res = null;
				res = service.InsertRequstProjectHistory(requestProject);
				
				// 요청 보내기 성공 (디비에 insert 성공)
				if(res == ServiceResult.OK) {
					realResult = "ok";
				}
			}
		// 아이디가 존재하지 않는다면
		}else {
			realResult = "failed";
		}
		
		return realResult;
		
	}

}
